require 'test_helper'

class ChallengeTest < ActiveSupport::TestCase
  include ChallengesHelper
  
  test "should not save challenge without name, code, and description " do
    temp = Challenge.new
    assert_not temp.save, "Challenges do not validate"
  end
  
#  test "should return the dna maximum value I" do
#    assert_equal 1, dna("GAAAAAAAT | GAAT")
#  end
#  
#  test "should return the dna maximum value II" do
#    assert_equal 1, dna("GCATGCT | GATTACA")
#  end
#  
#  test "hard test III" do
#    assert dna("TGCCGTTTACGCGGATACACCGTCGTCCTATAATTGAGGCCGGGACCTGAGGGGACCGACCGAAGTGACACTACCGCGCTGTTGAATTTGGACGACAGGGGACTGCGTAATACTTAGTGGAGATCGCAGTCATTACACCTGGTAAAAAGACGCAATAGCAAAGCTGTAAGATTTCAATTCCTTACCTGCACCCATGGAATAGAGTCATAATGGACCCAGCGCCAGGTAGAG | TGTCGTCTACCTGGAAACCTCCGATGTATGTACCGTCCTCCATTAAAAATTATTACTGGGGAGGACGGACCGAATTATTGTGAAGTGCCACATATAACACTACTGCACTGTTGGGAGATTATCAAAGATGTAGGCTTTGAGTTCCATACCTGCACCCATAGATCATCGACCAGTTGCGGAAAGGTAGTGCAAAAGCG")
#  end
#  
#    test "hard test II" do
#    assert dna("AACTTGCGGTAAGACGGGCTCCTATTTCAGGTACCCACAACAAGCTAGCAACGGATCCCACCTGATTGTAAAATGGATTGATTTTCTTCGAAAGAAGACCATGTACCAACCGGAGATACACTTCCCCTATTTAATGTCCCAACAGAGCTTCGAAATCCAAACGACATCGGGGGTTAATAAACTCTCCGAAGCTGCGTTGAGATTCAGATC | AACTTGCGCTAAGACGAGAGGTTCTCACCGAAGGGGGAACTGCAGGCAACTATCTAGCGGCAAACAATACACCACCCCTACCGTGAATCAGAGTACATGCGTGGGGATCCCCCCTCAAACTGGACCCGTGTCACGCCTACGGATTTTGTCCTGGCCCTTTGGGCAGGGGAGTTC")
#  end
#  
  #test "hard test I" do
  #  assert dna("CTGCCACTATCCAGTAGTTGCTCTGCGTTATTTGCAGGCAGTCGGCCGTTGCTTTTGGCATGTGTGCCCTCCTTTGGTGGCTTGGCAACAAGTCATAAAGGACATTCCATGAACATAAGTGTTTAACGGGAGAAGCATCCCTATAGTCGCGCTCTTGACG | CTTCCGTTATTGGCACGCAGTCGCTTAAGGATTACCTTAGGTCCCTGTCGCCGTTGCGGGATATCTATAACGCTTTGGGGCTTTGTCTACTATGGCTTTAACGCGAGAAGCACCCCTATTCCCCACTCTTAGACCGCTTGACC")
  #end
end
